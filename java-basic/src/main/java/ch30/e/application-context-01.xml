<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd">
  
  <context:component-scan base-package="ch30.e"/>
  
  <!-- 충고를 수행할 객체를 준비한다. 
       => 어떤 메서드의 호출 전/후에 작업을 수행할 객체를 준비한다.-->
  <bean id="myAdvice" class="ch30.e.MyAdvice"/>
  
  
  
  <!-- AOP 설정
       => 어떤 메서드에 어떤 작업을 추가할 지 설정한다. -->
  <aop:config>
    
    <!-- 어떤 관점으로 어떤 의도를 가지고 작업을 추가할 것인지 설정한다. -->
    <aop:aspect id="aspect1" ref="myAdvice">
      
      <!-- 작업을 끼워 넣을 위치를 지정한다. -->
      <aop:pointcut id="pointcut1" expression="execution(* ch30.e.X.*(..))"/>
      
      <!-- 메서드 호출 전-->
      <aop:before pointcut="execution(* ch30.e.X.*(..)) and args(p2, p3, p1)" method="doBefore" />
      
      <!-- 메서드 호출 후-->
      <aop:after pointcut-ref="pointcut1" method="doAfter" />
      
      <!-- 메서드 값 리턴 후-->
      <aop:after-returning pointcut-ref="pointcut1" 
          returning="rv"
          method="doAfterReturning" />
      
      <!-- 메서드에서 예외를 던졌을 때-->
      <aop:after-throwing pointcut-ref="pointcut1"
          throwing="err"
          method="doAfterThrowing"/>
      
    </aop:aspect>
  
  </aop:config>
  

 
  
</beans>

















